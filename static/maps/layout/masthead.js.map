{"version":3,"sources":["layout/masthead.js"],"names":["Backbone","View","extend","initialize","options","self","setElement","_template","$navbarBrandLink","$","$navbarBrandImage","$navbarBrandTitle","$navbarTabs","$quoteMeter","collection","Menu","Collection","on","append","Tab","model","render","$el","empty","each","callback","m","fetch","highlight","active_view","Galaxy","frame","Scratchbook","quotaMeter","QuotaMeter","UserQuotaMeter","user","el","window","$download_link","e","target","closest","length","attr","hide","preventDefault","text","q","get","html","brand","logo_url","logo_src","id","forEach","set"],"mappings":"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","file":"../../scripts/layout/masthead.js","sourcesContent":["import * as Backbone from \"backbone\";\nimport Menu from \"layout/menu\";\nimport Scratchbook from \"layout/scratchbook\";\nimport QuotaMeter from \"mvc/user/user-quotameter\";\n\n/* global Galaxy */\n/* global $ */\n\n/** Masthead **/\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.options = options;\n        this.setElement(this._template());\n        this.$navbarBrandLink = this.$(\".navbar-brand\");\n        this.$navbarBrandImage = this.$(\".navbar-brand-image\");\n        this.$navbarBrandTitle = this.$(\".navbar-brand-title\");\n        this.$navbarTabs = this.$(\".navbar-nav\");\n        this.$quoteMeter = this.$(\".quota-meter-container\");\n\n        // build tabs\n        this.collection = new Menu.Collection();\n        this.collection\n            .on(\"add\", model => {\n                self.$navbarTabs.append(new Menu.Tab({ model: model }).render().$el);\n            })\n            .on(\"reset\", () => {\n                self.$navbarTabs.empty();\n            })\n            .on(\"dispatch\", callback => {\n                self.collection.each(m => {\n                    callback(m);\n                });\n            })\n            .fetch(this.options);\n\n        // highlight initial active view\n        this.highlight(options.active_view);\n\n        // scratchbook\n        Galaxy.frame = this.frame = new Scratchbook({\n            collection: this.collection\n        });\n\n        // set up the quota meter (And fetch the current user data from trans)\n        // add quota meter to masthead\n        Galaxy.quotaMeter = this.quotaMeter = new QuotaMeter.UserQuotaMeter({\n            model: Galaxy.user,\n            el: this.$quoteMeter\n        });\n\n        // loop through beforeunload functions if the user attempts to unload the page\n        $(window)\n            .on(\"click\", e => {\n                var $download_link = $(e.target).closest(\"a[download]\");\n                if ($download_link.length == 1) {\n                    if ($(\"iframe[id=download]\").length === 0) {\n                        $(\"body\").append(\n                            $(\"<iframe/>\")\n                                .attr(\"id\", \"download\")\n                                .hide()\n                        );\n                    }\n                    $(\"iframe[id=download]\").attr(\"src\", $download_link.attr(\"href\"));\n                    e.preventDefault();\n                }\n            })\n            .on(\"beforeunload\", () => {\n                var text = \"\";\n                self.collection.each(model => {\n                    var q = model.get(\"onbeforeunload\") && model.get(\"onbeforeunload\")();\n                    if (q) {\n                        text += `${q} `;\n                    }\n                });\n                if (text !== \"\") {\n                    return text;\n                }\n            });\n    },\n\n    render: function() {\n        // this.$navbarBrandTitle.html(`Galaxy ${(this.options.brand && `/ ${this.options.brand}`) || \"\"}`);\n        this.$navbarBrandTitle.html(`${(this.options.brand && `${this.options.brand} /`) || \" \"} Galaxy`);\n        this.$navbarBrandLink.attr(\"href\", this.options.logo_url);\n        this.$navbarBrandImage.attr(\"src\", this.options.logo_src);\n        this.quotaMeter.render();\n        return this;\n    },\n\n    highlight: function(id) {\n        this.collection.forEach(function(model) {\n            model.set(\"active\", model.id == id);\n        });\n    },\n\n    /** body template */\n    _template: function() {\n        return `\n            <nav id=\"masthead\" class=\"navbar navbar-expand fixed-top justify-content-center navbar-dark\">\n                <a class=\"navbar-brand\">\n                    <img class=\"navbar-brand-image\"/>\n                    <span class=\"navbar-brand-title\"/>\n                </a>\n                <ul class=\"navbar-nav\"/>\n                <div class=\"quota-meter-container\"/>\n            </nav>`;\n    }\n});\n\nexport default {\n    View: View\n};\n"]}